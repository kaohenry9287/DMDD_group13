{"ast":null,"code":"var _jsxFileName = \"/Users/salonitalwar/Downloads/DMDDP4/DMDDApplication/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiEndpoint = 'http://localhost:5000/patients';\nfunction App() {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [formData, setFormData] = useState({/* ... initial form data ... */});\n\n  // Fetch patients from the Flask API\n  useEffect(() => {\n    axios.get(apiEndpoint).then(response => setPatients(response.data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // Handle form submit for Add/Update\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Determine POST (add) or PUT (update) based on if formData has an id\n    const method = formData.id ? 'put' : 'post';\n    axios[method](apiEndpoint + (formData.id ? `/${formData.id}` : ''), formData).then(response => {\n      // Refresh patients list or handle response\n    }).catch(error => console.error('Error submitting form:', error));\n  };\n\n  // Handle patient delete\n  const handleDelete = patientId => {\n    axios.delete(`${apiEndpoint}/${patientId}`).then(response => {\n      // Refresh patients list or handle response\n    }).catch(error => console.error('Error deleting patient:', error));\n  };\n\n  // Render patients and form in JSX\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"HI\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"QRZmCJLxRZf0AS6cKX3ykKyi2fU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","apiEndpoint","App","_s","patients","setPatients","formData","setFormData","get","then","response","data","catch","error","console","handleSubmit","event","preventDefault","method","id","handleDelete","patientId","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/salonitalwar/Downloads/DMDDP4/DMDDApplication/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst apiEndpoint = 'http://localhost:5000/patients';\n\nfunction App() {\n    const [patients, setPatients] = useState([]);\n    const [formData, setFormData] = useState({ /* ... initial form data ... */ });\n\n    // Fetch patients from the Flask API\n    useEffect(() => {\n        axios.get(apiEndpoint)\n            .then(response => setPatients(response.data))\n            .catch(error => console.error('Error fetching data:', error));\n    }, []);\n\n    // Handle form submit for Add/Update\n    const handleSubmit = event => {\n        event.preventDefault();\n        // Determine POST (add) or PUT (update) based on if formData has an id\n        const method = formData.id ? 'put' : 'post';\n        axios[method](apiEndpoint + (formData.id ? `/${formData.id}` : ''), formData)\n            .then(response => {\n                // Refresh patients list or handle response\n            })\n            .catch(error => console.error('Error submitting form:', error));\n    };\n\n    // Handle patient delete\n    const handleDelete = patientId => {\n        axios.delete(`${apiEndpoint}/${patientId}`)\n            .then(response => {\n                // Refresh patients list or handle response\n            })\n            .catch(error => console.error('Error deleting patient:', error));\n    };\n\n    // Render patients and form in JSX\n    return (\n        <div>\n          HI\n            {/* Patient list rendering */}\n            {/* Form for adding/updating patients */}\n            {/* ... */}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAG,gCAAgC;AAEpD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAE,gCAAiC,CAAC;;EAE7E;EACAC,SAAS,CAAC,MAAM;IACZC,KAAK,CAACU,GAAG,CAACP,WAAW,CAAC,CACjBQ,IAAI,CAACC,QAAQ,IAAIL,WAAW,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC5CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,YAAY,GAAGC,KAAK,IAAI;IAC1BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACA,MAAMC,MAAM,GAAGZ,QAAQ,CAACa,EAAE,GAAG,KAAK,GAAG,MAAM;IAC3CrB,KAAK,CAACoB,MAAM,CAAC,CAACjB,WAAW,IAAIK,QAAQ,CAACa,EAAE,GAAI,IAAGb,QAAQ,CAACa,EAAG,EAAC,GAAG,EAAE,CAAC,EAAEb,QAAQ,CAAC,CACxEG,IAAI,CAACC,QAAQ,IAAI;MACd;IAAA,CACH,CAAC,CACDE,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC;;EAED;EACA,MAAMO,YAAY,GAAGC,SAAS,IAAI;IAC9BvB,KAAK,CAACwB,MAAM,CAAE,GAAErB,WAAY,IAAGoB,SAAU,EAAC,CAAC,CACtCZ,IAAI,CAACC,QAAQ,IAAI;MACd;IAAA,CACH,CAAC,CACDE,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC;;EAED;EACA,oBACIb,OAAA;IAAAuB,QAAA,EAAK;EAED;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGC,CAAC;AAEd;AAACxB,EAAA,CAzCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}